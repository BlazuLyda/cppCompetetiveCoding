// drzewo przedzia≈Çowe
struct Node{
	int idx, val;
	int push;
	
	pair<int, int> ret() {
		return {val, idx};
	}
};

//~ const int R = 1 << 10;
//~ Node tree[R*2][1010];

//~ void push()

//~ pair<int, int> query(int w, int p, int k, int x, int y, int z) {
	//~ if (k < x || y < p) return {0, 0};
	//~ if (x <= p && k <= y) return tree[w][z];
	
	//~ int mid = (p + k) >> 1;
	//~ Node s1, s2;
	//~ s1 = query(w<<1, p, mid, x, y, z);
	//~ s2 = query(w<<1|1, mid+1, k, x, y, z);
	
	//~ return s1.val < s2.val ? s1.ret() : s2.ret();
//~ }

//~ void update(int w, int p, int k, int x, int y, int z, int v) {
	//~ if (k < x || y < p) return;
	//~ if (x <= p && k <= y) tree[w][z].val += v;
	
	//~ int mid = (p + k) >> 1;

	//~ query(w<<1, p, mid, x, y, z, v);
	//~ query(w<<1|1, mid+1, k, x, y, z, v);
//~ }
